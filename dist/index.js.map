{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar PINF = require( '@stdlib/constants-float64-pinf' );\nvar NINF = require( '@stdlib/constants-float64-ninf' );\nvar format = require( '@stdlib/string-format' );\n\n\n// MAIN //\n\n/**\n* Returns a JSON representation of a number.\n*\n* @param {number} x - input value\n* @throws {TypeError} must provide a number\n* @returns {Object} JSON representation\n*\n* @example\n* var json = number2json( NaN );\n* // returns { 'type': 'float64', 'value': 'NaN' }\n*/\nfunction number2json( x ) {\n\tif ( typeof x !== 'number' ) {\n\t\tthrow new TypeError( format( 'invalid argument. Must provide a number. Value: `%s`.', x ) );\n\t}\n\tif ( x !== x ) {\n\t\treturn {\n\t\t\t'type': 'float64',\n\t\t\t'value': 'NaN'\n\t\t};\n\t}\n\tif ( x === PINF ) {\n\t\treturn {\n\t\t\t'type': 'float64',\n\t\t\t'value': '+Infinity'\n\t\t};\n\t}\n\tif ( x === NINF ) {\n\t\treturn {\n\t\t\t'type': 'float64',\n\t\t\t'value': '-Infinity'\n\t\t};\n\t}\n\treturn x;\n}\n\n\n// EXPORTS //\n\nmodule.exports = number2json;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2022 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return a JSON representation of a number.\n*\n* @module @stdlib/number-float64-to-json\n*\n* @example\n* var number2json = require( '@stdlib/number-float64-to-json' );\n*\n* var str = JSON.stringify( number2json( NaN ) );\n* // returns '{\"type\":\"float64\",\"value\":\"NaN\"}'\n*/\n\n// MODULES //\n\nvar number2json = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = number2json;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAO,QAAS,gCAAiC,EACjDC,EAAO,QAAS,gCAAiC,EACjDC,EAAS,QAAS,uBAAwB,EAgB9C,SAASC,EAAaC,EAAI,CACzB,GAAK,OAAOA,GAAM,SACjB,MAAM,IAAI,UAAWF,EAAQ,wDAAyDE,CAAE,CAAE,EAE3F,OAAKA,IAAMA,EACH,CACN,KAAQ,UACR,MAAS,KACV,EAEIA,IAAMJ,EACH,CACN,KAAQ,UACR,MAAS,WACV,EAEII,IAAMH,EACH,CACN,KAAQ,UACR,MAAS,WACV,EAEMG,CACR,CAKAL,EAAO,QAAUI,IClCjB,IAAIE,EAAc,IAKlB,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "PINF", "NINF", "format", "number2json", "x", "number2json"]
}
